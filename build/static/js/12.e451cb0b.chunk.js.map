{"version":3,"sources":["Containers/MoviePage/MoviePage.js"],"names":["useStylesBootstrap","makeStyles","theme","arrow","color","palette","common","black","tooltip","backgroundColor","BootstrapTooltip","props","classes","MoviePage","useSelector","state","movies","movieId","favoriteList","userInfo","user","useState","movieData","setMovieData","moviekeywords","setMoviekeywords","allActors","setAllActors","recommendations","setRecommendations","trailerKey","setTrailerKey","isFav","setIsFav","isLoading","setIsLoading","dispatch","useDispatch","useEffect","mouted","document","body","scrollIntoView","behavior","fetch","base","api_key","then","data","json","catch","error","alert","trailerList","results","filter","el","official","site","toLowerCase","type","length","key","Object","keys","checkItem","some","id","clickHandlergenre","genreFunc","className","style","backgroundImage","imageUrl","backdrop_path","src","poster_path","alt","title","release_date","slice","genres","map","i","onClick","to","encodeURI","name","toLocaleLowerCase","value","vote_average","text","strokeWidth","styles","path","stroke","transformOrigin","vote_count","removeFromFavoriteList","addToFavoriteList","overview","budget","revenue","runtime","production_countries","iso_3166_1","production_companies","logo_path","loading","keywords","keyWordFunc","frameBorder","cast","known_for_department","profile_path","peopleIdFunc","component","height","image","gutterBottom","variant","character","getMovieId"],"mappings":"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","file":"static/js/12.e451cb0b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './MoviePage.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { api_key, base, imageUrl } from '../../staticInfo';\r\nimport { CircularProgressbar} from \"react-circular-progressbar\";\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport { getMovieId, peopleIdFunc, keyWordFunc, genreFunc, addToFavoriteList, removeFromFavoriteList } from '../../store/movieSlice';\r\nimport Loader from '../../Copmponents/Loader/Loader';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst useStylesBootstrap = makeStyles((theme) => ({\r\n    arrow: {\r\n        color: theme.palette.common.black,\r\n    },\r\n    tooltip: {\r\n        backgroundColor: theme.palette.common.black,\r\n    },\r\n}));\r\n\r\nfunction BootstrapTooltip(props) {\r\n    const classes = useStylesBootstrap();\r\n    return <Tooltip arrow classes={classes} {...props} />;\r\n}\r\n\r\nfunction MoviePage() {\r\n    const { movieId, favoriteList } = useSelector(state => state.movies);\r\n    const { userInfo } = useSelector(state => state.user);\r\n    const [movieData, setMovieData] = useState({});\r\n    const [moviekeywords, setMoviekeywords] = useState({});\r\n    const [allActors, setAllActors] = useState({});\r\n    const [recommendations, setRecommendations] = useState([]);\r\n    const [trailerKey, setTrailerKey] = useState('');\r\n    const [isFav, setIsFav] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let mouted = true;\r\n        document.body.scrollIntoView({behavior: 'smooth'});\r\n        \r\n        setIsLoading(true);\r\n        fetch(`${base}/movie/${movieId}?api_key=${api_key}&language=en-US`)\r\n        .then(data => data.json())\r\n        .then(data => {\r\n            if(mouted) {\r\n                setMovieData(data);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            if(mouted) {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n        fetch(`${base}/movie/${movieId}/keywords?api_key=${api_key}&language=en-US`)\r\n        .then(data => data.json())\r\n        .then(data => {\r\n            if(mouted) {\r\n                setMoviekeywords(data);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            if(mouted) {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n        fetch(`${base}/movie/${movieId}/credits?api_key=${api_key}&language=en-US`)\r\n        .then(data => data.json())\r\n        .then(data => {\r\n            if(mouted) {\r\n                setAllActors(data);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            if(mouted) {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n        fetch(`${base}/movie/${movieId}/videos?api_key=${api_key}&language=en-US`)\r\n        .then(data => data.json())\r\n        .then(data => {\r\n            if(mouted) {\r\n                let trailerList = data.results.filter(el => el.official && el.site.toLowerCase() === 'youtube' && el.type.toLowerCase() === 'trailer')\r\n                if(trailerList.length > 0) {\r\n                    setTrailerKey(trailerList[0].key);\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            if(mouted) {\r\n                alert(error);\r\n            }\r\n        });\r\n\r\n        fetch(`${base}/movie/${movieId}/recommendations?api_key=${api_key}&language=en-US&page=1`)\r\n        .then(data => data.json())\r\n        .then(data => {\r\n            if(mouted) {\r\n                setRecommendations(data.results);\r\n                setIsLoading(false);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            if(mouted) {\r\n                alert(error);\r\n                setIsLoading(false);\r\n            }\r\n        });\r\n\r\n        return () => { mouted = false }\r\n    }, [movieId]);\r\n\r\n    useEffect(() => {\r\n        if(Object.keys(movieData).length) {\r\n            let checkItem = favoriteList.some(el => el.movieData.id === movieData.id);\r\n            setIsFav(checkItem);\r\n        }\r\n    }, [favoriteList, movieData])\r\n\r\n    const clickHandler = (id) => dispatch(getMovieId(id));\r\n    const clickHandlerPeople = (id) => dispatch(peopleIdFunc(id));\r\n    const clickHandlerKeyword = (id) => dispatch(keyWordFunc(id));\r\n    const clickHandlergenre = (id) => dispatch(genreFunc(id));\r\n    const clickHandlerFavorite = () => {\r\n        \r\n        if(favoriteList.some(el => el.movieData.id === movieData.id)) {\r\n            dispatch(removeFromFavoriteList(movieData.id));\r\n        } else {\r\n            dispatch(addToFavoriteList({movieData: movieData}));\r\n        }\r\n    }\r\n\r\n    return isLoading ? <Loader /> : Object.keys(movieData).length !== 0 ? (\r\n        <div className='movie_page'>\r\n            <div className=\"banner_movie\" style={{backgroundImage: `url(${imageUrl}/original/${movieData.backdrop_path})`}}>\r\n                <div className=\"overlay_banner_movie\" />\r\n                <div className=\"content_movie\">\r\n                    <div className=\"image_poster\">\r\n                        <img src={`${imageUrl}/w300/${movieData.poster_path}`} alt={movieData.title} />\r\n                    </div>\r\n                    <div className=\"info_movie\">\r\n                        <h1 className=\"movie_title\">{movieData.title} ({movieData.release_date.slice(0, 4)})</h1>\r\n                        <div className=\"movie_details\">\r\n                            <div className=\"movie_releas_date\">({movieData.release_date}){'\\u00A0'}-{'\\u00A0'}</div>\r\n                            <div className=\"movie_genres\">\r\n                                {movieData.genres && movieData.genres.length > 0 && movieData.genres.map((el, i) => movieData.genres.length - 1 !== i ? <span key={el.id} onClick={() => clickHandlergenre(el)} ><Link to={`/genre/${encodeURI(el.name).toLocaleLowerCase()}`}>{el.name}</Link>, </span> : <span key={el.id} onClick={() => clickHandlergenre(el)}><Link to={`/genre/${encodeURI(el.name)}`} >{el.name}</Link></span>)}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"rating_btns\">\r\n                            <div className=\"rating_movie\">\r\n                                <CircularProgressbar\r\n                                    value={movieData.vote_average ? movieData.vote_average * 10 : 6 * 10}\r\n                                    text={movieData.vote_average ? movieData.vote_average : 6}\r\n                                    strokeWidth={6}\r\n                                    styles={{\r\n                                        path: {\r\n                                            stroke: `${\r\n                                                movieData.vote_average >= 7 ? '#3e98c7' : movieData.vote_average < 7 && movieData.vote_average > 4 ? '#D2D531' : '#DB4264'\r\n                                            }`,\r\n                                            transformOrigin: 'center center',\r\n                                        }\r\n                                    }}\r\n                                />\r\n                                <span className=\"vote_people\">({movieData.vote_count})</span>\r\n                            </div>\r\n                            <div className=\"btn_fav\">\r\n                                <BootstrapTooltip title={`${userInfo === null ? `you have to Login to Add it to Favorite` : isFav ? 'Remove from Favorite' : 'Add to Favorite'}`}>\r\n                                    <Button onClick={userInfo === null ? null : clickHandlerFavorite}><FavoriteIcon style={!isFav ? {color: '#fff'} : {color: '#EF47B6'}} /></Button>\r\n                                </BootstrapTooltip>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"overview\">\r\n                                <h2 className=\"over_title\">Overview</h2>\r\n                            <p>{movieData.overview}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"small_info\">\r\n                    {\r\n                        movieData.budget && movieData.budget > 0 ? (\r\n                            <div className=\"budget\">\r\n                                <h4>Budget</h4>\r\n                                <div>{movieData.budget}</div>\r\n                            </div>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        movieData.revenue && movieData.revenue > 0 ? (\r\n                            <div className=\"revenue\">\r\n                                <h4>Revenue</h4>\r\n                                <div>{movieData.revenue}</div>\r\n                            </div>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        movieData.runtime && movieData.runtime > 0 ? (\r\n                            <div className=\"runtime\">\r\n                                <h4>Runtime</h4>\r\n                                <div>{movieData.runtime} mins</div>\r\n                            </div>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        movieData.production_countries && movieData.production_countries.length > 0 && (\r\n                            <div className=\"production_countries\">\r\n                                <h4>Production Countries</h4>\r\n                                <div>\r\n                                    {movieData.production_countries.map(el => <span key={el.iso_3166_1}>{el.name}</span>)}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    {\r\n                        movieData.production_companies && movieData.production_companies.length > 0 && (\r\n                            <div className=\"production_companies\">\r\n                                <h4>Production Companies</h4>\r\n                                <div className=\"all_companies\">\r\n                                    {movieData.production_companies.map(el => (\r\n                                        <div className='companies' key={el.id}>\r\n                                            <h5>{el.name}</h5>\r\n                                            { \r\n                                                el.logo_path && (\r\n                                                    <img src={`${imageUrl}/w92/${el.logo_path}`} alt={el.name} title={el.name} loading='lazy' />\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n                {\r\n                    Object.keys(moviekeywords).length !== 0 && moviekeywords.keywords.length > 0 && (\r\n                        <div className=\"keywords\">\r\n                            <h3>Keywords</h3>\r\n                            <ul>\r\n                                {moviekeywords.keywords.map(el => <li key={el.id} onClick={() => clickHandlerKeyword(el)}><Link to={`/keyword/${encodeURI(el.name)}`}>{el.name}</Link></li>)}\r\n                            </ul>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n            {\r\n                trailerKey.length > 0 && (\r\n                    <div className=\"movie_video\">\r\n                        <div className=\"video_box\">\r\n                            <iframe src={`https://www.youtube.com/embed/${trailerKey}`} frameBorder=\"0\" title={movieData.title}/>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            <div className=\"actors_boxs\">\r\n                {\r\n                    Object.keys(allActors).length !== 0 && allActors.cast.length > 0 &&\r\n                    allActors.cast.map(el => el.known_for_department.toLowerCase() === 'acting' && el.profile_path !== null && (\r\n                        <Card key={el.id} onClick={() => clickHandlerPeople(el.id)}>\r\n                            <Link to={`/people/${encodeURI(el.name).toLocaleLowerCase()}`}>\r\n                            <CardActionArea>\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    alt={el.name}\r\n                                    height=\"140\"\r\n                                    image={`${imageUrl}/w185/${el.profile_path}`}\r\n                                    title={el.name}\r\n                                />\r\n                                <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">{el.name}</Typography>\r\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{el.character}</Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                            </Link>\r\n                        </Card>\r\n                    ))\r\n                }\r\n            </div>\r\n            {\r\n                recommendations && recommendations.length > 0 && (\r\n                    <div className=\"recommendations_movies\">\r\n                        <h2>Recommendations Movie</h2>\r\n                        <div className=\"recommendations_all_movies\">\r\n                            <Carousel>\r\n                                {\r\n                                    recommendations.map(el => (\r\n                                        <div key={el.id}>\r\n                                            <img src={`${imageUrl}/w500${el.poster_path}`} alt={el.title} />\r\n                                            <Link to={`/movie/${encodeURI(el.title).toLocaleLowerCase()}`} onClick={() => clickHandler(el.id)} className=\"legend\" title={el.title}>{el.title}</Link>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </Carousel>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    ) : null;\r\n}\r\n\r\nexport default MoviePage;"],"sourceRoot":""}