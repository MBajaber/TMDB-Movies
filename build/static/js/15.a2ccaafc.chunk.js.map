{"version":3,"sources":["Containers/PeoplePage/PeoplePage.js"],"names":["PeoplePage","useState","isLoading","setIsLoading","peopleInfo","setPeopleInfo","peopleId","useSelector","state","movies","myDate","Date","useEffect","document","body","scrollIntoView","behavior","mouted","fetch","base","api_key","then","data","json","catch","error","alert","className","src","imageUrl","profile_path","alt","loading","known_for_department","gender","birthday","getFullYear","place_of_birth","deathday","also_known_as","length","map","el","name","biography","startUrl","endUrl"],"mappings":"gMAgGeA,UAzFf,WAAuB,IAAD,EACgBC,oBAAS,GADzB,mBACXC,EADW,KACAC,EADA,OAEkBF,mBAAS,MAF3B,mBAEXG,EAFW,KAECC,EAFD,KAGVC,EAAaC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAxCH,SACFI,EAAS,IAAIC,KAyBnB,OAvBAC,qBAAU,WACNC,SAASC,KAAKC,eAAe,CAACC,SAAU,WACxC,IAAIC,GAAS,EAiBb,OAhBAd,GAAa,GACbe,MAAM,GAAD,OAAIC,IAAJ,mBAAmBb,EAAnB,oBAAuCc,IAAvC,oBACJC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAC,GACCL,IACCZ,EAAciB,GACdnB,GAAa,OAGpBqB,OAAM,SAAAC,GACAR,IACCS,MAAMD,GACNtB,GAAa,OAId,WAAQc,GAAS,KAEzB,CAACX,IAEGJ,EAAY,cAAC,IAAD,IAA4B,OAAfE,EAC5B,sBAAKuB,UAAU,cAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,qBAAKA,UAAU,eAAf,SACI,qBAAKC,IAAG,UAAKC,IAAL,gBAAqBzB,EAAW0B,cAAgBC,IAAI,GAAGC,QAAQ,WAE3E,sBAAKL,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,2BACA,sBAAKA,UAAU,oBAAf,UACKvB,EAAW6B,sBACR,gCACI,mBAAGN,UAAU,eAAb,SAA4B,iDAC5B,sBAAMA,UAAU,gBAAhB,SAAiCvB,EAAW6B,0BAGnD7B,EAAW8B,QACR,gCACI,mBAAGP,UAAU,eAAb,SAA4B,8CAC5B,sBAAMA,UAAU,gBAAhB,SAAuD,IAAtBvB,EAAW8B,OAAe,SAAW,YAG7E9B,EAAW+B,UACR,gCACI,mBAAGR,UAAU,eAAb,SAA4B,gDAC5B,uBAAMA,UAAU,gBAAhB,UAAiCvB,EAAW+B,SAA5C,KAAwDzB,EAAO0B,cAAgB,IAAIzB,KAAKP,EAAW+B,UAAUC,cAA7G,oBAGPhC,EAAWiC,gBACR,gCACI,mBAAGV,UAAU,eAAb,SAA4B,sDAC5B,sBAAMA,UAAU,gBAAhB,SAAiCvB,EAAWiC,oBAGnDjC,EAAWkC,UACR,gCACI,mBAAGX,UAAU,eAAb,SAA4B,gDAC5B,sBAAMA,UAAU,gBAAhB,SAAiCvB,EAAWkC,cAGtB,OAA7BlC,EAAWmC,eAA0BnC,EAAWmC,cAAcC,OAAS,GACpE,sBAAKb,UAAU,eAAf,UACI,mBAAGA,UAAU,eAAb,SAA4B,qDAC5B,6BACKvB,EAAWmC,cAAcE,KAAI,SAAAC,GAAE,OAAI,6BAAcA,GAALA,oBAOrE,sBAAKf,UAAU,mBAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BvB,EAAWuC,OACxC,2CACA,mBAAGhB,UAAU,YAAb,SAA0BvB,EAAWwC,YACrC,cAAC,IAAD,CAAQC,SAAQ,UAAK1B,IAAL,mCAAoCC,IAApC,0FAAqI0B,OAAM,uBAAkBxC,EAAlB,mDAGnK","file":"static/js/15.a2ccaafc.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './PeoplePage.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { api_key, base, imageUrl } from '../../staticInfo';\r\nimport Loader from '../../Copmponents/Loader/Loader';\r\nimport Movies from '../../Copmponents/Movies/Movies';\r\n\r\nfunction PeoplePage() {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [peopleInfo, setPeopleInfo] = useState(null);\r\n    const { peopleId } = useSelector(state => state.movies);\r\n    const myDate = new Date();\r\n\r\n    useEffect(() => {\r\n        document.body.scrollIntoView({behavior: 'smooth'});\r\n        let mouted = true;\r\n        setIsLoading(true);\r\n        fetch(`${base}/person/${peopleId}?api_key=${api_key}&language=en-US`)\r\n        .then(data => data.json())\r\n        .then(data => {\r\n            if(mouted) {\r\n                setPeopleInfo(data);\r\n                setIsLoading(false);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            if(mouted) {\r\n                alert(error);\r\n                setIsLoading(false);\r\n            }\r\n        });\r\n\r\n        return () => { mouted = false }\r\n\r\n    }, [peopleId]);\r\n\r\n    return isLoading ? <Loader /> : peopleInfo !== null ? (\r\n        <div className='people_page'>\r\n            <div className=\"people_image_info\">\r\n                <div className=\"people_image\">\r\n                    <img src={`${imageUrl}/w300${peopleInfo.profile_path}`} alt=\"\" loading='lazy' />\r\n                </div>\r\n                <div className=\"people_info\">\r\n                    <h3 className=\"people_title\">Personal Info</h3>\r\n                    <div className=\"all_personal_info\">\r\n                        {peopleInfo.known_for_department && (\r\n                            <div>\r\n                                <p className=\"main_section\"><strong>Known For</strong></p>\r\n                                <span className=\"people_answer\">{peopleInfo.known_for_department}</span>\r\n                            </div>\r\n                        )}\r\n                        {peopleInfo.gender && (\r\n                            <div>\r\n                                <p className=\"main_section\"><strong>Gender</strong></p>\r\n                                <span className=\"people_answer\">{peopleInfo.gender === 1 ? 'Female' : 'Male'}</span>\r\n                            </div>\r\n                        )}\r\n                        {peopleInfo.birthday && (\r\n                            <div>\r\n                                <p className=\"main_section\"><strong>Birthday</strong></p>\r\n                                <span className=\"people_answer\">{peopleInfo.birthday} ({myDate.getFullYear() - new Date(peopleInfo.birthday).getFullYear()} years old)</span>\r\n                            </div>\r\n                        )}\r\n                        {peopleInfo.place_of_birth && (\r\n                            <div>\r\n                                <p className=\"main_section\"><strong>Place of Birth</strong></p>\r\n                                <span className=\"people_answer\">{peopleInfo.place_of_birth}</span>\r\n                            </div>\r\n                        )}\r\n                        {peopleInfo.deathday && (\r\n                            <div>\r\n                                <p className=\"main_section\"><strong>Deathday</strong></p>\r\n                                <span className=\"people_answer\">{peopleInfo.deathday}</span>\r\n                            </div>\r\n                        )}\r\n                        {peopleInfo.also_known_as !== null && peopleInfo.also_known_as.length > 0 && (\r\n                            <div className='also_know_as'>\r\n                                <p className=\"main_section\"><strong>Also Known As</strong></p>\r\n                                <ul>\r\n                                    {peopleInfo.also_known_as.map(el => <li key={el}>{el}</li>)}\r\n                                </ul>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"people_biography\">\r\n                <h1 className=\"people_name\">{peopleInfo.name}</h1>\r\n                <h2>Biography</h2>\r\n                <p className=\"biography\">{peopleInfo.biography}</p>\r\n                <Movies startUrl={`${base}/discover/movie?api_key=${api_key}&language=en-US&&sort_by=popularity.desc&include_adult=false&include_video=false&page=`} endUrl={`&with_people=${peopleId}&with_watch_monetization_types=flatrate`} />\r\n            </div>\r\n        </div>\r\n    ) : null;\r\n}\r\n\r\nexport default PeoplePage;\r\n"],"sourceRoot":""}